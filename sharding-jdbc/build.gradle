plugins {
    id 'java'
    id 'application'
}

group 'org.lee.study'
version 'unspecified'

repositories {
    mavenCentral()
}
applicationDefaultJvmArgs = [
        '--add-opens=java.base/java.lang=ALL-UNNAMED'
]
//task(
//        args [ '--add-opens=java.base/java.lang=ALL-UNNAMED']
//)

dependencies {
    implementation 'mysql:mysql-connector-java:8.0.28'
    // 这个是 5.x后的写法 shardingsphere
//    implementation 'org.apache.shardingsphere:shardingsphere-jdbc-core:4.1.1'
    implementation 'org.apache.shardingsphere:sharding-jdbc-core:4.1.1'
// data source 的使用
    implementation 'org.springframework:spring-jdbc:5.3.20'
    // 使用 seata 来实现分布式事务
    implementation 'org.apache.shardingsphere:sharding-transaction-base-seata-at:4.1.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    implementation 'io.seata:seata-rm-datasource:1.0.0'
    implementation 'io.seata:seata-tm:1.0.0'
    implementation 'io.seata:seata-codec-all:1.0.0'
//            < !--introduce
//    this module
//    if
//    you want to use XA transaction-- >
//            < dependency >
//            < groupId > org.apache.shardingsphere < /groupId>
//    <artifactId>sharding-transaction-xa-core</ artifactId >
//    < version > $ { shardingsphere.version } < /version>
//</ dependency >
//
//            < !--introduce
//    this module
//    if
//    you want to use BASE transaction-- >
//            < dependency >
//            < groupId > org.apache.shardingsphere < /groupId>
//    <artifactId>sharding-transaction-base-seata-at</ artifactId >
//    < version > $ { sharding - sphere.version } < /version>
//</ dependency >
}

test {
    useJUnitPlatform()
}