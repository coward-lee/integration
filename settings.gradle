pluginManagement {
    repositories {
        maven {
            url "https://maven.aliyun.com/repository/gradle-plugin"
        }
        gradlePluginPortal()
        mavenCentral()
    }
}



rootProject.name = 'integration'




// 以来配置信息
// 别名配置，
//dependencyResolutionManagement {
//    versionCatalogs {
//        libs {
//            library('groovy-core', 'org.codehaus.groovy:groovy:3.0.5')
//            library('groovy-json', 'org.codehaus.groovy:groovy-json:3.0.5')
//            library('groovy-nio', 'org.codehaus.groovy:groovy-nio:3.0.5')
//            library('commons-lang3', 'org.apache.commons', 'commons-lang3').version {
//                strictly '[3.8, 4.0['
//                prefer '3.9'
//            }
//        }
//    }
//}
// 配置 toml 文件路径
dependencyResolutionManagement {
    versionCatalogs {
        libs {
            // 默认路径
//            from(files("../gradle/libs.versions.toml"))
            // 自定义路径
            from(files("./libs.toml"))
        }
        // 测试用？
        // declares an additional catalog, named 'testLibs', from the 'test-libs.versions.toml' file
//        testLibs {
//            from(files('gradle/test-libs.versions.toml'))
//        }
    }
}







include 'framework'
include 'framework:nettty'
include 'framework:spring'
include 'framework:spring-boot'
include 'framework:sharding-jdbc'
include 'framework:antlr'
include 'framework:antlr-study'
include 'framework:akka'
include 'framework:cglib'
include 'framework:reactor'
include 'framework:arrow'
include 'framework:netty-deep'
include 'framework:spring:spring-boot-starter'
include 'framework:spring:spring-boot'
include 'framework:spring:spring'


include 'basic'
include 'basic:juc'
include 'basic:jvm'
include 'basic:ddd'
include 'basic:design-pattern'
include 'basic:module-development'
include 'basic:gradle-demo'
include 'basic:guava-demo'

include 'component'
include 'component:redis'
include 'component:zookeeper'
include 'component:mysql'
include 'component:rocketmq'
include 'component:hadoop'
include 'component:grpc'

include 'interview'
include 'interview:leetcode'


include 'language'
include 'language:scala'
include 'language:kotlin'

include 'im'
include 'im:im-core'
include 'im:im-server'
include 'im:im-client'
include 'im:untitled'
include 'im:im-client'
include 'im:im-netty:im-netty'


include 'linux'
include 'framework:web3'
findProject(':framework:web3')?.name = 'web3'
include 'framework:rpc'
findProject(':framework:rpc')?.name = 'rpc'

